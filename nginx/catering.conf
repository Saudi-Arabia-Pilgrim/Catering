# Nginx configuration for catering.mukhsin.space

# HTTP server: handle ACME challenge and redirect all other requests to HTTPS
server {
    listen 80;
    server_name api.catering.mukhsin.space;

    # Serve Let's Encrypt ACME challenge from the webroot volume
    location /.well-known/acme-challenge/ {
    alias /var/www/certbot/.well-known/acme-challenge/;
    try_files $uri =404;
    default_type "text/plain";
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server: serve the application over TLS
server {
    listen 443 ssl http2;
    server_name api.catering.mukhsin.space;

    # SSL certificate configuration (from Let's Encrypt volume)
    ssl_certificate     /etc/letsencrypt/live/api.catering.mukhsin.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.catering.mukhsin.space/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.catering.mukhsin.space/chain.pem;

    # SSL protocols and ciphers (following best practices)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    # (Optional) Diffie-Hellman parameters for DHE ciphers:
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # SSL session settings
    ssl_session_cache shared:SSL:30m;
    ssl_session_timeout 30m;
    ssl_session_tickets off;

    # Security headers (HSTS, XSS, etc.)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy no-referrer;
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests; block-all-mixed-content;" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Feature-Policy "geolocation 'none'; microphone 'none'; camera 'none'" always;
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;

    # Serve static files directly from the mounted volume
    location /static/ {
        alias /static/;  # 'static_data' volume is mounted here
        try_files $uri $uri/ =404;
    }
    location /media/ {
        alias /media/;  # (if media files volume is mounted similarly)
        try_files $uri $uri/ =404;
    }

    # Proxy all other requests to the Django application server
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_pass http://catering_app:8000;  # 'catering_app' container serves on port 8000
    }
}
